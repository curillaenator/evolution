schemas:
  Item:
    type: object
    required:
      - id
      - parentId
      - name
      - locked
      - childrenIds
    properties:
      id:
        type: string
      parentId:
        type: string
        nullable: true
      name:
        type: string
      locked:
        type: boolean
      childrenIds:
        type: array
        items:
          type: string
      createdAt:
        type: number
      createdBy:
        type: string
      updatedAt:
        type: number
      updatedBy:
        type: string

  CreateItemPayload:
    type: object
    required:
      - item
    properties:
      item:
        $ref: '#/schemas/Item'

createItem:
  summary: Создание элемента иерархии
  requestBody:
    required: true
    content:
      application/json:
        schema:
          $ref: '#/schemas/CreateItemPayload'
  responses:
    '201':
      description: Элемент успешно создан

getRoot:
  summary: Получение root иерархии

  responses:
    '200':
      description: Элемент найден
      content:
        application/json:
          schema:
            $ref: '#/schemas/Item'
    '404':
      description: Элемент не найден

getItem:
  summary: Получение элемента иерархии по ID
  parameters:
    - name: itemId
      in: path
      required: true
      schema:
        type: string
  responses:
    '200':
      description: Элемент найден
      content:
        application/json:
          schema:
            $ref: '#/schemas/Item'
    '404':
      description: Элемент не найден

deleteItem:
  summary: Удаление элемента с перемещением его детей
  parameters:
    - name: itemId
      in: path
      required: true
      schema:
        type: string
  responses:
    '200':
      description: Элемент удалён, дети перемещены
      content:
        application/json:
          schema:
            $ref: '#/schemas/Item'
    '404':
      description: Элемент не найден
